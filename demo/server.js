// Generated by purs bundle 0.12.5
var PS = {};
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];                    
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];                       
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["discardUnit"] = discardUnit;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];                          
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify"] = modify;
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["StaticPtr"] = $PS["StaticPtr"] || {};
  var exports = $PS["StaticPtr"];
  var key = function (v) {
      return v;
  };
  exports["key"] = key;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Widget"] = $PS["Widget"] || {};
  var exports = $PS["Widget"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var StaticPtr = $PS["StaticPtr"];
  var text = function (str) {
      return function (v) {
          return v.appendTextNode(str);
      };
  };
  var runServer = function (v) {
      return function __do() {
          var v1 = Effect_Ref["new"]("")();
          var v2 = Effect_Ref["new"](Data_List_Types.Nil.value)();
          var append = function (str) {
              return Effect_Ref.modify_(function (v3) {
                  return v3 + str;
              })(v1);
          };
          var impl = {
              pushElement: function (tag) {
                  return function __do() {
                      Effect_Ref.modify_(Data_List_Types.Cons.create(tag))(v2)();
                      return append("<" + (tag + ">"))();
                  };
              },
              popElement: function __do() {
                  var v3 = Effect_Ref.read(v2)();
                  if (v3 instanceof Data_List_Types.Nil) {
                      return Data_Unit.unit;
                  };
                  if (v3 instanceof Data_List_Types.Cons) {
                      append("</" + (v3.value0 + ">"))();
                      return Effect_Ref.write(v3.value1)(v2)();
                  };
                  throw new Error("Failed pattern match at Widget (line 62, column 12 - line 66, column 39): " + [ v3.constructor.name ]);
              },
              appendTextNode: append,
              client: function (ptr) {
                  return append("<!-- client:" + (StaticPtr.key(ptr) + " -->"));
              }
          };
          v(impl)();
          return Effect_Ref.read(v1)();
      };
  };
  var functorWidget = new Data_Functor.Functor(function (f) {
      return function (m) {
          return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Effect.functorEffect)(f))(m);
      };
  });
  var el = function (tag) {
      return function (v) {
          return function (v1) {
              return function __do() {
                  v1.pushElement(tag)();
                  var v2 = v(v1)();
                  v1.popElement();
                  return v2;
              };
          };
      };
  };
  var client = function (code) {
      return function (v) {
          return v.client(code);
      };
  };
  var applyWidget = new Control_Apply.Apply(function () {
      return functorWidget;
  }, function (v) {
      return function (v1) {
          return function (impl) {
              return Control_Apply.apply(Effect.applyEffect)(v(impl))(v1(impl));
          };
      };
  });
  var bindWidget = new Control_Bind.Bind(function () {
      return applyWidget;
  }, function (v) {
      return function (k) {
          return function (impl) {
              return function __do() {
                  var v1 = v(impl)();
                  var v2 = k(v1);
                  return v2(impl)();
              };
          };
      };
  });
  var applicativeWidget = new Control_Applicative.Applicative(function () {
      return applyWidget;
  }, function (x) {
      return function (v) {
          return Control_Applicative.pure(Effect.applicativeEffect)(x);
      };
  });
  exports["el"] = el;
  exports["text"] = text;
  exports["client"] = client;
  exports["runServer"] = runServer;
  exports["functorWidget"] = functorWidget;
  exports["applyWidget"] = applyWidget;
  exports["applicativeWidget"] = applicativeWidget;
  exports["bindWidget"] = bindWidget;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["App"] = $PS["App"] || {};
  var exports = $PS["App"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Unit = $PS["Data.Unit"];
  var Widget = $PS["Widget"];                
  var client2 = Control_Bind.discard(Control_Bind.discardUnit)(Widget.bindWidget)(Widget.text("This is another thing rendered client side"))(function () {
      return Widget.client("App._static_0");
  });
  var app = Widget.el("html")(Control_Bind.discard(Control_Bind.discardUnit)(Widget.bindWidget)(Widget.el("head")(Widget.text("<meta charset=utf-8>")))(function () {
      return Widget.el("body")(Control_Bind.discard(Control_Bind.discardUnit)(Widget.bindWidget)(Widget.el("h1")(Widget.text("This is rendered server side")))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Widget.bindWidget)(Widget.client("App._static_1"))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Widget.bindWidget)(Widget.el("p")(Widget.text("This is after client side stuff")))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Widget.bindWidget)(Widget.client("App._static_2"))(function () {
                      return Widget.text("<script src=demo/client.js></script>");
                  });
              });
          });
      }));
  }));
  var _static_2 = Widget.el("p")(client2);
  var _static_1 = Widget.el("h2")(Widget.text("This is rendered client side"));
  var _static_0 = Control_Bind.discard(Control_Bind.discardUnit)(Widget.bindWidget)(Widget.el("br")(Control_Applicative.pure(Widget.applicativeWidget)(Data_Unit.unit)))(function () {
      return Widget.text("and works when nested");
  });
  exports["app"] = app;
  exports["client2"] = client2;
  exports["_static_2"] = _static_2;
  exports["_static_1"] = _static_1;
  exports["_static_0"] = _static_0;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Server"] = $PS["Server"] || {};
  var exports = $PS["Server"];
  var App = $PS["App"];
  var Effect_Console = $PS["Effect.Console"];
  var Widget = $PS["Widget"];                
  var main = function __do() {
      Effect_Console.log("")();
      var v = Widget.runServer(App.app)();
      return Effect_Console.log(v)();
  };
  exports["main"] = main;
})(PS);
PS["Server"].main();
